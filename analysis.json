{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "d2l-switch.html",
      "properties": [
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "!Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pressed",
          "type": "boolean",
          "description": "If true, the user is currently holding down the button.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_pressedChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "type": "boolean",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointerDown",
          "type": "boolean",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "receivedFocusFromKeyboard",
          "type": "boolean",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ariaActiveAttribute",
          "type": "string",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_ariaActiveAttributeChanged\""
            }
          },
          "defaultValue": "\"aria-pressed\"",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_mouseEventRe",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "type": "boolean",
          "description": "If true, the element currently has focus.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If true, the user cannot interact with this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_disabledChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_oldTabIndex",
          "type": "(?string | undefined)",
          "description": "Value of the `tabindex` attribute before `disabled` was activated.\n`null` means the attribute was not present.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_boundFocusBlurHandler",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "__handleEventRetargeting",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "noink",
          "type": "boolean",
          "description": "If true, the element will not produce a ripple effect when interacted\nwith via the pointer.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noinkChanged\""
            }
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_rippleContainer",
          "type": "(Element | undefined)",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "value",
          "type": "string",
          "description": "Overriden from Polymer.IronFormElementBehavior",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_valueChanged\""
            }
          },
          "defaultValue": "\"on\"",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "_parentForm",
          "type": "Object",
          "description": "The form that the element is registered to.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "validator",
          "type": "string",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "True if the last call to `validate` is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_invalidChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "checked",
          "type": "boolean",
          "description": "Gets or sets the state, `true` is checked and `false` is unchecked.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_checkedChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 3
            },
            "end": {
              "line": 155,
              "column": 4
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 3
            },
            "end": {
              "line": 159,
              "column": 4
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_tapHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_focusChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_detectKeyboardFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_userActivate",
          "description": "'change' events",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_downHandler",
          "description": "In addition to the functionality provided in `IronButtonState`, ensures\na ripple effect is created when the element is in a `pressed` state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_upHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyDownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyUpHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 182,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_asyncClick",
          "description": "event handler to unwind before triggering another event",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_pressedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pressed"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_ariaActiveAttributeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_activeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            },
            {
              "name": "ariaActiveAttribute"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_controlStateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_changedButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 3
            },
            "end": {
              "line": 147,
              "column": 4
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_focusBlurHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_disabledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_changedControlState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_buttonStateChanged",
          "description": "Synchronizes the element's `active` and `checked` state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-checked-element-behavior.html",
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperCheckedElementBehavior"
        },
        {
          "name": "ensureRipple",
          "description": "Ensures this element contains a ripple effect. For startup efficiency\nthe ripple effect is dynamically on demand when needed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "optTriggeringEvent",
              "type": "!Event=",
              "description": "(optional) event that triggered the\nripple."
            }
          ],
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "getRipple",
          "description": "Returns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the\nripple to be created.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "hasRipple",
          "description": "Returns true if this element currently contains a ripple effect.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_createRipple",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-inky-focus-behavior.html",
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInkyFocusBehavior"
        },
        {
          "name": "_noinkChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noink"
            }
          ],
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_focusedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-inky-focus-behavior.html",
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "receivedFocusFromKeyboard"
            }
          ],
          "inheritedFrom": "Polymer.PaperInkyFocusBehavior"
        },
        {
          "name": "_invalidChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_validator",
          "description": "Recompute this every time it's needed, because we don't know if the\nunderlying IronValidatableBehaviorMeta has changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "hasValidator",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if the validator `validator` exists."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "validate",
          "description": "Returns true if the `value` is valid, and updates `invalid`. If you want\nyour element to have custom validation logic, do not override this method;\noverride `_getValidity(value)` instead.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Deprecated: The value to be validated. By default,\nit is passed to the validator's `validate()` function, if a validator is set.\nIf this argument is not specified, then the element's `value` property\nis used, if it exists."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if `value` is valid."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_getValidity",
          "description": "Returns false if the element is required and not checked, and true otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_value",
              "type": "*=",
              "description": "Ignored."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if `required` is false or if `checked` is true."
          },
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "_requiredChanged",
          "description": "Update the aria-required label when `required` is changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "_checkedChanged",
          "description": "Synchronizes the element's checked state with its ripple effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-checked-element-behavior.html",
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperCheckedElementBehavior"
        },
        {
          "name": "_valueChanged",
          "description": "Reset value to 'on' if it is set to `undefined`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "_ontrack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 170,
              "column": 4
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_trackStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 3
            },
            "end": {
              "line": 176,
              "column": 4
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_trackMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 3
            },
            "end": {
              "line": 184,
              "column": 4
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "track"
            }
          ]
        },
        {
          "name": "_trackEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 3
            },
            "end": {
              "line": 189,
              "column": 4
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 135,
          "column": 10
        },
        "end": {
          "line": 190,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "pressed",
          "description": "If true, the user is currently holding down the button.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "active",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointer-down",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "received-focus-from-keyboard",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "aria-active-attribute",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "description": "If true, the element currently has focus.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "description": "If true, the user cannot interact with this element.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "noink",
          "description": "If true, the element will not produce a ripple effect when interacted\nwith via the pointer.",
          "sourceRange": {
            "file": "bower_components/paper-behaviors/paper-ripple-behavior.html",
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "name",
          "description": "The name of this element.",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "value",
          "description": "Overriden from Polymer.IronFormElementBehavior",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "required",
          "description": "Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "description": "True if the last call to `validate` is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "checked",
          "description": "Gets or sets the state, `true` is checked and `false` is unchecked.",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "type": "CustomEvent",
          "name": "focused-changed",
          "description": "Fired when the `focused` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "iron-form-element-register",
          "description": "iron-form-element-register",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-form-element-unregister",
          "description": "iron-form-element-unregister",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-change",
          "description": "iron-change",
          "metadata": {},
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "checked-changed",
          "description": "Fired when the `checked` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "d2l-switch.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 17
            }
          }
        }
      ],
      "tagname": "d2l-switch"
    }
  ]
}
